{"ast":null,"code":"var _jsxFileName = \"/home/renan/\\xC1rea de Trabalho/linuxout-2022/area-de-trab/Curso B7Web/Curso react b\\xE1sico/jogo_da_memoria2/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport * as C from './App.styles';\nimport logoImage from './svgs/logo.svg';\nimport { Button } from './components/Button';\nimport { InfoItem } from './components/infoItem';\nimport { GridItem } from './components/GridItem';\nimport { items } from './data/items';\nimport { formatTimeElapsed } from './helpers/formatTimeElapsed';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [playing, setPlaying] = useState(false);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [moveCount, setMoveCount] = useState(0);\n  const [shownCount, setShownCount] = useState(0);\n  const [gridItems, setGridItems] = useState([]);\n  useEffect(() => resetAndCreatGrid(), []); //verify is opened are equal\n\n  useEffect(() => {\n    if (shownCount === 2) {\n      let opened = gridItems.filter(item => item.shown == true);\n\n      if (opened.length === 2) {\n        if (opened[0].item === opened[1].item) {\n          let tmpGrid = [...gridItems]; //if both are equal, make every \"shown\" permanent\n\n          for (let i in tmpGrid) {\n            if (tmpGrid[i].shown) {\n              tmpGrid[i].permanentShown = true;\n              tmpGrid[i].shown = false;\n            }\n          }\n\n          setGridItems(tmpGrid);\n          setShownCount(0);\n        } else {\n          //if they are not equal, close all \"shown\"\n          setTimeout(() => {\n            let tmpGrid = [...gridItems];\n\n            for (let i in tmpGrid) {\n              tmpGrid[i].shown = false;\n            }\n\n            setGridItems(tmpGrid);\n            setShownCount(0);\n          }, 1000);\n        }\n\n        setMoveCount(moveCount => moveCount + 1);\n      }\n    }\n  }, [shownCount, gridItems]);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      if (playing) setTimeElapsed(timeElapsed + 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [playing, timeElapsed]); //verify if game is over\n\n  useEffect(() => {\n    if (moveCount > 0 && gridItems.every(item => item.permanentShown === true)) {\n      setPlaying(false);\n    }\n  }, [moveCount, gridItems]);\n\n  const resetAndCreatGrid = () => {\n    //passo 1 - resetar o jogo\n    setTimeElapsed(0);\n    setMoveCount(0);\n    setShownCount(0); //passo 2 - criar o grid \n\n    let tmpGrid = [];\n\n    for (let i = 0; i < items.length * 2; i++) tmpGrid.push({\n      item: null,\n      shown: false,\n      permanentShown: false\n    }); //Preenchendo o grid\n\n\n    for (let i = 0; i < 2; i++) {\n      for (let j = 0; j < items.length; j++) {\n        let pos = -1;\n\n        while (pos < 0 || tmpGrid[pos].item !== null) {\n          pos = Math.floor(Math.random() * (items.length * 2));\n        }\n\n        tmpGrid[pos].item = j;\n      }\n    }\n\n    setGridItems(tmpGrid); //começar o jogo\n\n    setPlaying(true);\n  };\n\n  const handleItemClick = index => {\n    if (playing && index !== null && shownCount < 2) {\n      let tmpGrid = [...gridItems];\n\n      if (tmpGrid[index].permanentShown === false && tmpGrid[index].shown === false) {\n        tmpGrid[index].shown = true;\n        setShownCount(shownCount + 1);\n      }\n\n      setGridItems(tmpGrid);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(C.Body, {\n    children: /*#__PURE__*/_jsxDEV(C.Container, {\n      children: [/*#__PURE__*/_jsxDEV(C.Info, {\n        children: [/*#__PURE__*/_jsxDEV(C.LogoLink, {\n          href: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logoImage,\n            width: \"300\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(C.InfoArea, {\n          children: [/*#__PURE__*/_jsxDEV(InfoItem, {\n            label: \"Tempo\",\n            value: formatTimeElapsed(timeElapsed)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n            label: \"Movimentos\",\n            value: moveCount.toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Reiniciar\",\n          onClick: resetAndCreatGrid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(C.GridArea, {\n        children: /*#__PURE__*/_jsxDEV(C.Grid, {\n          children: gridItems.map((item, index) => /*#__PURE__*/_jsxDEV(GridItem, {\n            item: item,\n            onClick: () => handleItemClick(index)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"fnfVEoTfamC6c6JX2TQ7he+hVFk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","C","logoImage","Button","InfoItem","GridItem","items","formatTimeElapsed","App","playing","setPlaying","timeElapsed","setTimeElapsed","moveCount","setMoveCount","shownCount","setShownCount","gridItems","setGridItems","resetAndCreatGrid","opened","filter","item","shown","length","tmpGrid","i","permanentShown","setTimeout","timer","setInterval","clearInterval","every","push","j","pos","Math","floor","random","handleItemClick","index","toString","map"],"sources":["/home/renan/Área de Trabalho/linuxout-2022/area-de-trab/Curso B7Web/Curso react básico/jogo_da_memoria2/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport * as C from './App.styles';\nimport logoImage from './svgs/logo.svg';\nimport { Button } from './components/Button';\nimport { InfoItem } from './components/infoItem';\nimport { GridItem } from './components/GridItem';\n\nimport { GridItemType } from './types/GridItemType';\nimport { items } from './data/items';\nimport { formatTimeElapsed } from './helpers/formatTimeElapsed';\n\nconst App = () => {\n\n  const [playing, setPlaying] = useState<boolean>(false);\n  const [timeElapsed, setTimeElapsed] = useState<number>(0);\n  const [moveCount, setMoveCount] = useState<number>(0);\n  const [shownCount, setShownCount] = useState<number>(0);\n  const [gridItems, setGridItems] = useState<GridItemType[]>([]);\n\n  useEffect(() => resetAndCreatGrid(), []);\n\n  //verify is opened are equal\n  useEffect(() => {\n    if (shownCount === 2) {\n      let opened = gridItems.filter(item => item.shown == true);\n      if (opened.length === 2) {\n\n        if (opened[0].item === opened[1].item) {\n\n          let tmpGrid = [...gridItems];\n\n          //if both are equal, make every \"shown\" permanent\n          for (let i in tmpGrid) {\n            if (tmpGrid[i].shown) {\n              tmpGrid[i].permanentShown = true;\n              tmpGrid[i].shown = false;\n            }\n          }\n          setGridItems(tmpGrid);\n          setShownCount(0);\n        }\n        else {\n\n          //if they are not equal, close all \"shown\"\n          setTimeout(() => {\n            let tmpGrid = [...gridItems];\n\n            for (let i in tmpGrid) {\n              tmpGrid[i].shown = false;\n            }\n            setGridItems(tmpGrid);\n            setShownCount(0);\n          }, 1000);\n        }\n\n        setMoveCount(moveCount => moveCount + 1);\n\n      }\n    }\n  }, [shownCount, gridItems]);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      if (playing) setTimeElapsed(timeElapsed + 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [playing, timeElapsed]);\n\n  //verify if game is over\n  useEffect(() => {\n    if(moveCount > 0 && gridItems.every(item => item.permanentShown === true)){\n      setPlaying(false);\n    }\n  },[moveCount, gridItems]);\n\n  const resetAndCreatGrid = () => {\n    //passo 1 - resetar o jogo\n    setTimeElapsed(0);\n    setMoveCount(0);\n    setShownCount(0);\n\n    //passo 2 - criar o grid \n    let tmpGrid: GridItemType[] = [];\n    for (let i = 0; i < (items.length * 2); i++)tmpGrid.push({\n      item: null, shown: false, permanentShown: false\n    });\n\n    //Preenchendo o grid\n    for (let i = 0; i < 2; i++) {\n      for (let j = 0; j < items.length; j++) {\n        let pos = -1;\n        while (pos < 0 || tmpGrid[pos].item !== null) {\n          pos = Math.floor(Math.random() * (items.length * 2));\n        }\n        tmpGrid[pos].item = j;\n      }\n    }\n\n\n    setGridItems(tmpGrid);\n    //começar o jogo\n    setPlaying(true);\n  }\n\n  const handleItemClick = (index: number) => {\n    if (playing && index !== null && shownCount < 2) {\n      let tmpGrid = [...gridItems];\n\n      if (tmpGrid[index].permanentShown === false && tmpGrid[index].shown === false) {\n        tmpGrid[index].shown = true;\n        setShownCount(shownCount + 1);\n      }\n      setGridItems(tmpGrid);\n    }\n  }\n\n\n  return (\n    <C.Body>\n      <C.Container>\n        <C.Info>\n          <C.LogoLink href=\"\">\n            <img src={logoImage} width=\"300\" alt=\"\" />\n          </C.LogoLink>\n\n          <C.InfoArea>\n            <InfoItem label=\"Tempo\" value={formatTimeElapsed(timeElapsed)} />\n            <InfoItem label=\"Movimentos\" value={moveCount.toString()} />\n          </C.InfoArea>\n\n          <Button label=\"Reiniciar\"  onClick={resetAndCreatGrid} />\n        </C.Info>\n        <C.GridArea>\n          <C.Grid>\n            {gridItems.map((item, index) => (\n              <GridItem\n                key={index}\n                item={item}\n                onClick={() => handleItemClick(index)}\n              />\n            ))}\n\n          </C.Grid>\n        </C.GridArea>\n      </C.Container>\n    </C.Body>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}